#!EVENT Scoreboard

#am ende des scripts ist die config für die
#anpassung des aussehen des scoreboards mit erklärung.
#Um das script halbwegs vernünftig zu bearbeiten, kopiere
#alles in ein textdokument und bearbeite es dort, oder
#nutze die advanced script mod, diese kannst du mit dem
#folgenden link herunterlanden:
#https://steamwar.de/AdvancedScripts

var on on

#rescue feature
if {tps>=1} Statecheck
 global scoreboard.State off
##führt /rescue aus
rescue
exit

#Prüft, ob das Scoreboard per command ausgeschaltet wurde
.Statecheck
if {global.scoreboardState.isset} Stateset
 global scoreboardState on
.Stateset
 if {global.scoreboardState==on} ScoreboardOn
  exit

.ScoreboardOn

#prüft ob farben per command gesetzt wurden, wenn nicht, wechsel zu presets
if {global.scoreboardPrimary.isset} primSet
 global scoreboardPrimary &e
.primSet
 if {global.scoreboardSecondary.isset} secset
  global scoreboardSecondary &f&l
.secset
 if {global.scoreboardvTrue.isset} sectrue
  global scoreboardvTrue &a
.sectrue
 if {global.scoreboardvFalse.isset} secfalse
  global scoreboardvFalse &c
.secfalse
 if {global.scoreboardNeutral.isset} secneutral
  global scoreboardNeutral &7
.secneutral
 if {global.scoreboardDanger.isset} secdanger
  global scoreboardDanger &4
.secdanger
 if {global.scoreboardSpacer.isset} spacerset
  global scoreboardSpacer --
.spacerset

#Variablenverkürzung
var cPrim {global.scoreboardPrimary}
var cSec {global.scoreboardSecondary}&l
var cSpacer {global.scoreboardSpacer} 
var cTrue {global.scoreboardvTrue} 
var cFalse {global.scoreboardvFalse} 
var cNeutral {global.scoreboardNeutral} 
var cDanger {global.scoreboardDanger}&l

#time
var E_Time {cNeutral}{time}

#uptime
var t {ticks/20}
floor t t

var sec {t}
var t {t/60}
floor t t
var sec {sec-t*60}

var min {t}
var t {t/60}
floor t t
var min {min-t*60}

var f {sec}
call format
var sec {f}

var f {min}
call format
var min {f}

var E_Uptime {cNeutral}{t}{min}{sec}
jump afterformat

##in: f, out: f
.format
 if {f>=10} woanders
 var f :0{f}
 return
.woanders
 var f :{f}
 return
.afterformat

#Region
var E_RegionType {cNeutral}{const.region_type}

#TNT
if {const.tnt_onlytb==true} onlyTB
 if {const.tnt==true} tnt
  var E_Tnt {cFalse}off
  jump F_Freeze
.onlyTB
 var E_Tnt {cTrue}onlyTB
 jump F_Freeze
.tnt
 var E_Tnt {cDanger}on

#freeze
.F_Freeze
if {const.freeze==true} freeze
 var E_Freeze {cFalse}off
 jump F_Protect
.freeze
 var E_Freeze {cTrue}on

#protect
.F_Protect
if {const.protect==true} protect
 var E_Protect {cFalse}off
 jump F_Fire
.protect
 var E_Protect {cTrue}on

#fire
.F_Fire
 if {const.fire==true} fire
  var E_Fire {cFalse}off
  jump F_Tps
.fire
 var E_Fire {cTrue}on

#tps
.F_Tps
if {const.tps>=const.tps_limit*80/100} tps_normal
 if {const.tps<=const.tps_limit*20/100} tps_low
  var tpscolour &e
  jump tps
.tps_normal
 var tpscolour &a
 jump tps
.tps_low
 var tpscolour &c
.tps
 var E_Tps {tpscolour}{const.tps}
 var E_Tpslimit {cNeutral}{const.tps_limit}

.1

#Trace

var E_Tracetime 0

var troff OFF
var tridle IDLE
var trexpl IDLE_AUTO_EXPLODE
var trignite IDLE_AUTO_IGNITE
var trsingle IDLE_SINGLE

if {const.trace_status==tridle} trIdle
 if {const.trace_status==trexpl} trExpl
  if {const.trace_status==trignite} trIgn
   if {const.trace_status==trsingle} trSing
    if {const.trace==true} trON
     var E_Trace {cFalse}off
     jump F_Loader
.trIdle
 var E_Trace {cFalse}off
 jump F_Loader
.trExpl
 var E_Trace {cTrue}auto {cNeutral}(explode)
 jump F_Tracetime
.trIgn
 var E_Trace {cTrue}auto {cNeutral}(ignition)
 jump F_Tracetime
.trSing
 var E_Trace {cTrue}single
 jump F_Tracetime
.trON
 var E_Trace {cTrue}on
 jump F_Tracetime

.F_Tracetime
var E_Tracetime {trace_time}
jump F_Loader

#Loader
.F_Loader
var looff OFF
var losetup SETUP
var lorun RUNNING
var losingle SINGLE
var lopause PAUSE
var loend END

if {const.loader_status==lorun} loRun
 if {const.loader_status==losetup} loSetup
  if {const.loader_status==losingle} loSingle
   if {const.loader_status==lopause} loPause
    if {const.loader_status==loend} loEnd
     if {const.loader_status==looff} loOff
var E_Loader {cTrue}on
jump F_Playername
.loRun
 var E_Loader {cTrue}on
 jump F_Playername
.loSetup
 var E_Loader {cNeutral}setup
 jump F_Playername
.loSingle
 var E_Loader {cTrue}single
 jump F_Playername
.loPause
 var E_Loader {cFalse}pause
 jump F_Playername
.loEnd
 var E_Loader {cFalse}end
 jump F_Playername
.loOff
 var E_Loader {cFalse}off

#Spielername
.F_Playername
var E_Name {name}

#Spielerkoordinaten
round posX {x}
round posY {y}
round posZ {z}
var E_Coords {posX} {posY} {posZ}

#!!Hier kannst du das scoreboard bearbeiten!!
#am besten kopierst du das script mit
#STRG+A, dann mit STRG+C, und bearbeitest es
#in einer .txt datei. am besten mit Notepad++

#Hier stehen alle funktionen die du nutzen kannst:
##{E_Time} zeigt die zeit an
##{E_Uptime} zeigt an wie lange der bau schon läuft
##{E_RegionType} zeigt den region type an
##{E_Tnt} zeigt den TNT status an
##{E_Freeze} zeigt den status von freeze an
##{E_Protect} zeigt den status von protect an
##{E_Fire} zeigt den status von Fire an
##{E_Tps} zeigt die TPS an
##{E_Tpslimit} zeigt das TPS limit an
##{E_Trace} zeigt den status vom Tracer an
##{E_Tracetime} zeigt an wie lange der Tracer schon läuft
##{E_Loader} zeigt den status vom Loader an
##{E_Name} zeigt deinen Namen an
##{E_Coords} zeigt deine Koordinaten an

#Hier stehen die infos zu den mit "/cb theme" verwaltbaren variablen:
##{cPrim} Primärfarbe - Standard gelb
##{cSec} Sekundärfarbe - Standard weiß
##{cNeutral} Neutrale/ standardfarbe - Standard grau
##{cTrue} Farbe dafür wenn etwas an/ wahr ist - Standard grün
##{cFalse} Farbe dafür wenn etwas aus/ falsch ist - Standard rot
##{cDanger} Farbe für gefahr - Standard dunkelrot

#Hier drunter wird das Scoreboard zusammengebaut. Du kannst es nach belieben anpassen. Eine Zeile im scoreboard erstellst du
#druch das drücken von enter, und indem du in der neuen Zeile "echo" eingibst. Alles was in derselben zeile nach "echo"
#steht, wird im scoreboard angezeigt.

echo {cPrim}Time: {E_Time}
echo {cPrim}Uptime: {E_Uptime}
echo {cSec}{cSpacer}Region{cSpacer}{cSec}
echo {cPrim}Type: {E_RegionType}
echo {cPrim}TNT: {E_Tnt}
echo {cPrim}Freeze: {E_Freeze}
echo {cPrim}Protect: {E_Protect}
echo {cPrim}Fire: {E_Fire}
echo {cPrim}TPS: {E_Tps} &f| {E_Tpslimit} 
echo {cPrim}Trace: {E_Trace}
echo {cPrim}Runtime: {cNeutral}{E_Tracetime}
echo {cPrim}Loader: {E_Loader}
echo {cSec}{cSpacer}Player{cSpacer}{cSec}
echo {cPrim}{E_Name}
echo {cNeutral}{E_Coords}
